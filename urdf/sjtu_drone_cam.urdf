<?xml version="1.0"?>
<robot name="drone">
  <link name="drone/base_link">
    <inertial>
      <mass value="1.477" />
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="0.1152" ixy="0" ixz="0" iyy="0.1152" iyz="0" izz="0.218" />
    </inertial>
    <collision name="sjtu_drone__collision">
      <origin rpy="0 0 0" xyz="0   0   0.04" />
      <geometry>
        <mesh filename="package://sjtu_drone/meshes/quadrotor_4.stl" />
      </geometry>
    </collision>
    <visual name="sjtu_drone__visual">
      <origin rpy="0 0 0" xyz="0   0   0.04" />
      <geometry>
        <mesh filename="package://sjtu_drone/meshes/quadrotor_4.dae" />
      </geometry>
    </visual>
  </link>

  <link name="drone/imu_link">
    <inertial>
      <mass value="0.01" />
      <!-- Assume a small mass for the IMU -->
      <origin rpy="0 0 0" xyz="0 0 0" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      <!-- Assume small inertia for IMU -->
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="drone/base_link" />
    <child link="drone/imu_link" />
    <origin rpy="0 0 0" xyz="0 0 0" />
  </joint>

  <gazebo>
    <plugin name='simple_drone' filename='libplugin_drone.so'>
      <robotNamespace>drone</robotNamespace>
      <imuTopic>drone/imu</imuTopic>
      <bodyName>drone/base_link</bodyName>
      <maxForce>600</maxForce>
      <motionSmallNoise>0.0</motionSmallNoise>
      <motionDriftNoise>0.0</motionDriftNoise>
      <motionDriftNoiseTime>100000.0</motionDriftNoiseTime>
      <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
      <velocityXYLimit>2</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>-1</velocityZLimit>
      <!-- <positionXYProportionalGain>1.1</positionXYProportionalGain>
      <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
      <positionXYIntegralGain>0.0</positionXYIntegralGain>
      <positionXYLimit>5</positionXYLimit>
      <positionZProportionalGain>1.0</positionZProportionalGain>
      <positionZDifferentialGain>0.2</positionZDifferentialGain>
      <positionZLimit>-1</positionZLimit> -->
    </plugin>
  </gazebo>
  <!-- Sensors -->
  <!-- <gazebo>
    <sensor type="gpu_ray" name="laser_sensor">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>1875</samples>
            <resolution>0.01</resolution>
            <min_angle>${-pi}</min_angle>
            <max_angle>${pi}</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>${-pi/12}</min_angle>
            <max_angle>${-pi/12}</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laser_plugin" filename="libgazebo_ros_velodyne_gpu_laser.so">
        <topicName>sjtu_drone/points</topicName>
        <frameName>sjtu_drone/base_link</frameName>
        <min_intensity>0</min_intensity>
      </plugin>
    </sensor>
  </gazebo>

  <link name="sjtu_drone/lidar_link">
    <visual name="lidar_visual">
      <origin rpy="0 0 0" xyz="0 0 -0.035"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_collision">
      <geometry>
        <cylinder length="0.075" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00109375" ixy="0" ixz="0" iyy="0.00109375" iyz="0" izz="0.00125"/>
    </inertial>
  </link>

  <joint name="sjtu_drone/sjtu_lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.1"/>
    <parent link="sjtu_drone/base_link"/>
    <child link="sjtu_drone/lidar_link"/>
  </joint>

  <gazebo reference="sjtu_drone/lidar_link">
    <sensor name="lidar_sensor" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>18750.0</samples>
            <resolution>0.1</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799387799</min_angle>
            <max_angle>0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="lidar_wamv_plugin">
        <topicName>points</topicName>
        <frameName>base_link</frameName>
        <min_intensity>0</min_intensity>
      </plugin>
    </sensor>
  </gazebo> -->
  <!-- <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>sjtu_drone/imu_link</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>20.0</updateRate>
    </plugin>
  </gazebo> -->

  <link name="drone/middle_camera_link">
    <visual name="middle_camera_visual">
      <origin rpy="0 0 1.57079632679" xyz="-0.033 0 0" />
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae" />
      </geometry>
    </visual>
    <collision name="middle_camera_lens_collision">
      <origin rpy="0 1.57079632679 0" xyz="0.018 0 0" />
      <geometry>
        <cylinder length="0.042" radius="0.015" />
      </geometry>
    </collision>
    <collision name="middle_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0" />
      <geometry>
        <box size="0.036 0.03 0.03" />
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3" />
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746" />
    </inertial>
  </link>
  <link name="drone/middle_camera_link_optical">
  </link>

  <gazebo reference="drone/middle_camera_link">
    <sensor name="middle_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="middle_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_middle_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>drone/sensors/cameras/middle_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>drone/middle_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>


  <link name="drone/front_camera_link">
    <visual name="front_camera_visual">
      <origin rpy="0 0 1.57079632679" xyz="-0.033 0 0" />
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae" />
      </geometry>
    </visual>
    <collision name="front_camera_lens_collision">
      <origin rpy="0 1.57079632679 0" xyz="0.018 0 0" />
      <geometry>
        <cylinder length="0.042" radius="0.015" />
      </geometry>
    </collision>
    <collision name="front_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0" />
      <geometry>
        <box size="0.036 0.03 0.03" />
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3" />
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746" />
    </inertial>
  </link>
  <link name="drone/front_camera_link_optical">
  </link>

  <gazebo reference="drone/front_camera_link">
    <sensor name="front_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="front_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_front_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>drone/sensors/cameras/front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>drone/front_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <link name="drone/left_camera_link">
    <visual name="left_camera_visual">
      <origin rpy="0 0 1.57079632679" xyz="-0.033 0 0" />
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae" />
      </geometry>
    </visual>
    <collision name="left_camera_lens_collision">
      <origin rpy="0 1.57079632679 0" xyz="0.018 0 0" />
      <geometry>
        <cylinder length="0.042" radius="0.015" />
      </geometry>
    </collision>
    <collision name="left_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0" />
      <geometry>
        <box size="0.036 0.03 0.03" />
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3" />
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746" />
    </inertial>
  </link>
  <link name="drone/left_camera_link_optical">
  </link>

  <gazebo reference="drone/left_camera_link">
    <sensor name="left_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="left_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_left_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>drone/sensors/cameras/left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>drone/left_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <link name="drone/right_camera_link">
    <visual name="right_camera_visual">
      <origin rpy="0 0 1.57079632679" xyz="-0.033 0 0" />
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae" />
      </geometry>
    </visual>
    <collision name="right_camera_lens_collision">
      <origin rpy="0 1.57079632679 0" xyz="0.018 0 0" />
      <geometry>
        <cylinder length="0.042" radius="0.015" />
      </geometry>
    </collision>
    <collision name="right_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0" />
      <geometry>
        <box size="0.036 0.03 0.03" />
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3" />
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746" />
    </inertial>
  </link>
  <link name="drone/right_camera_link_optical">
  </link>

  <gazebo reference="drone/right_camera_link">
    <sensor name="right_camera_sensor" type="depth">
      <update_rate>30.0</update_rate>
      <camera name="right_camera_camera">
        <horizontal_fov>1.570796</horizontal_fov>
        <vertical_fov>1.04872</vertical_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_openni_kinect.so" name="camera_plugin_right_camera">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>drone/sensors/cameras/right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <depthImageTopicName>depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>depth/points</pointCloudTopicName>
        <frameName>drone/right_camera_link_optical</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>25.0</pointCloudCutoffMax>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- TODO -->
  <joint name="drone/base_to_middle_camera_joint" type="fixed">
    <origin rpy="0 1.57079632679 0" xyz="0 0 0" />
    <parent link="drone/base_link" />
    <child link="drone/middle_camera_link" />
  </joint>
  <joint name="drone/middle_camera_to_middle_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0" />
    <parent link="drone/middle_camera_link" />
    <child link="drone/middle_camera_link_optical" />
  </joint>

  <joint name="drone/base_to_front_camera_joint" type="fixed">
    <origin rpy="0 0.24033181 0" xyz="0.08 0 0" />
    <parent link="drone/base_link" />
    <child link="drone/front_camera_link" />
  </joint>
  <joint name="drone/front_camera_to_front_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0" />
    <parent link="drone/front_camera_link" />
    <child link="drone/front_camera_link_optical" />
  </joint>

  <joint name="drone/base_to_left_camera_joint" type="fixed">
    <origin rpy="0 0.24033181 -0.48393994" xyz="0.04 -0.04 0" />
    <parent link="drone/base_link" />
    <child link="drone/left_camera_link" />
  </joint>
  <joint name="drone/left_camera_to_left_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0" />
    <parent link="drone/left_camera_link" />
    <child link="drone/left_camera_link_optical" />
  </joint>

  <joint name="drone/base_to_right_camera_joint" type="fixed">
    <origin rpy="0 0.24033181 0.48393994" xyz="0.04 0.04 0" />
    <parent link="drone/base_link" />
    <child link="drone/right_camera_link" />
  </joint>
  <joint name="drone/right_camera_to_right_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0" />
    <parent link="drone/right_camera_link" />
    <child link="drone/right_camera_link_optical" />
  </joint>

</robot>